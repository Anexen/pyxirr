name: CI

on:
  push:
    branches:
      - main
  # pull_request:
  # release:
  #   types:
  #     - released
  #     - prereleased

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - name: Install dev-requirements
        run: pip install -r dev-requirements.txt
      - name: Tests
        run: cargo test --no-default-features --release
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release --out dist --strip
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist --no-sdist --strip
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - name: Install dev-requirements
        run: pip install -r dev-requirements.txt
      - name: Tests
        run: cargo test --no-default-features --release
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          args: --release --out dist --no-sdist --strip
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        profile: minimal
        default: true
    - name: Build
      run: cargo build --release
    - name: Install dev-requirements
      run: pip install -r dev-requirements.txt
    - name: Tests
      run: cargo test --no-default-features --release
    - name: Build Wheels
      uses: messense/maturin-action@v1
      with:
        manylinux: auto
        args: --release --out dist --no-sdist --strip
    # - name: Test no numpy installed works
    #   run: |
    #     pip uninstall numpy -y
    #     cargo test --no-default-features --release
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [ macos, windows, linux, linux-cross, pypy ]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - name: Publish to PyPi
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       run: |
  #         pip install --upgrade wheel pip setuptools twine
  #         twine upload --skip-existing *
