name: Publish

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dev-requirements
        run: pip install -r dev-requirements.txt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Test
        run: cargo test --no-default-features --release

      # - name: Test no numpy installed works
      #   run: |
      #     pip uninstall numpy -y
      #     cargo test --release --no-default-features --features no-numpy

      - name: Build Wheels - Linux
        if: matrix.os == 'ubuntu-latest'
        uses: messense/maturin-action@v1
        with:
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --out dist --strip

      - name: Build Wheels - MacOS
        if: matrix.os == 'macos-latest'
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --universal2 --out dist --no-sdist --strip

      - name: Build Wheels - Windows
        if: matrix.os == 'windows-latest'
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --out dist --no-sdist --strip

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  publish:
    needs: build
    runs-on: "ubuntu-latest"
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - run: pip install maturin

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/pyxirr*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: github.event_name == 'release' && github.event.action == 'created'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: maturin publish --username __token__
