name: CI

on:
  pull_request:
  push:
    branches: [main]
    tags: ["v*"]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install dev-requirements
        run: pip install -r dev-requirements.txt
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        run: cargo test --no-default-features --features tests --release
      - name: Test no numpy installed works
        run: |
          pip uninstall numpy -y
          cargo test --release --no-default-features --features tests,nonumpy


  build:
    needs: test
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Wheels - Linux
        if: matrix.os == 'ubuntu-latest'
        uses: messense/maturin-action@v1
        with:
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --strip

      - name: Build Wheels - MacOS
        if: matrix.os == 'macos-latest'
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --universal2 --no-sdist --strip

      - name: Build Wheels - Windows
        if: matrix.os == 'windows-latest'
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --no-sdist --strip

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: target/wheels

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - run: pip install maturin

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: pyxirr*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: find . -name 'pyxirr*' | xargs -l maturin upload --skip-existing --username __token__
